<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuehai.learn.english.mapper.WordMapper">
    <resultMap id="wordResultMap" type="com.yuehai.learn.english.entity.WordEntity">
        <result column="uid" property="id" jdbcType="BIGINT"/>
        <result column="content_en" property="contentEN" jdbcType="VARCHAR"/>
        <result column="content_cn" property="contentCN" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="sort_by" property="sortBy" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="selectWordSql">
        select uid,
               content_en,
               content_cn,
               create_time,
               update_time,
               sort_by,
               type
        from tb_word</sql>

    <select id="selectWords" resultMap="wordResultMap">
        <include refid="selectWordSql"/>
        <if test="year!=null and month!=null">
            where year(create_time) = #{year} and month(create_time) =#{month}
        </if>
        order by uid
    </select>

    <select id="selectWordById" parameterType="Long" resultType="com.yuehai.learn.english.entity.WordEntity">
        <include refid="selectWordSql"/>
        where uid = #{id}
    </select>

    <select id="selectWordCount" resultType="Int">
        select count(*)
        from tb_word
    </select>

    <!--    SELECT *-->
    <!--    FROM tb_word AS t1-->
    <!--    JOIN (SELECT ROUND(RAND() * ((SELECT MAX(uid) FROM tb_word) - (SELECT MIN(uid) FROM tb_word)) +-->
    <!--    (SELECT MIN(uid) FROM tb_word)) AS id) AS t2-->
    <!--    WHERE t1.uid >= t2.id-->
    <!--    ORDER BY t1.uid-->
    <!--    LIMIT 5;-->
    <!---->
    <!--    SELECT * FROM tb_word ORDER BY rand() LIMIT 5;-->
    <select id="selectRandomWord" resultMap="wordResultMap">
        <include refid="selectWordSql"/>
        where create_time between #{startDate} and #{endDate}
        order by rand() limit #{count}
    </select>

    <insert id="insertWord" parameterType="com.yuehai.learn.english.entity.WordEntity">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_word(content_en
        <if test="contentCN !=null and contentCN !=''">,content_cn</if>
        <if test="createTime!=null">,create_time</if>)
        values(#{contentEN}
        <if test="contentCN !=null and contentCN !=''">,#{contentCN}</if>
        <if test="createTime!=null">,#{createTime}</if>)
    </insert>

    <update id="updateWord" parameterType="com.yuehai.learn.english.entity.WordEntity">
        update tb_word
        <set>
            <if test="contentEN !=null and contentEN !=''">
                content_en = #{contentEN},
            </if>
            <if test="contentCN !=null and contentCN !=''">
                content_cn = #{contentCN},
            </if>
        </set>
        where uid = #{id}
    </update>

    <delete id="deleteWord" parameterType="Long">
        delete
        from tb_word
        where uid = #{id}
    </delete>
    <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item
            : 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
    <delete id="deleteWords" parameterType="Long">
        delete
        from tb_word
        where uid in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>